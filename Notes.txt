Python main documentation:
https://docs.python.org/3/library/functions.html


MODULES:
In Python you can import other modules (built-in or custom) to extend the functionality of Python in your code.

	import module_name
	from module_name import variable1, variable2

After any of the above options you could start using these variables in your code like this accordingly:
	module_name.variable1
	or:
	variable1


DATA TYPES:

STRING:
	string.lower() --> Converts to lowercase
	string.split(x) --> Splits the string where x occurs
	


CONDITIONALS.
It is extremely important the spaces and tabs.
Correct alignment of a switch statement:

if condition:
	execute_action
else:
	execute_else
	

An else if statement is declared as "elif" in Python

Operator	Example		Meaning
not			not x		True if x is False
						False if x is True
						(Logically reverses the sense of x)
or			x or y		True if either x or y is True
						False otherwise
and			x and y		True if both x and y are True
						False otherwise
						
RANDOM NUMBERS:
It is a python module (pseudo random generator).

You use it like:
	import random	
	
	random_integer = random.randit(x, y)  --> You get a random number between X and Y including both.
	random_float = random.random() --> You get a random number between 0 and 0.99999999999xxx
	oter important random module functions: random.choice(x), random.shuffle(x)
DATA STRUCTURES:
LISTS:
Arrays in Python are called "lists" ==> Use [] to define, assign and recall elements from a list.

I.e. states = ['Delaware', 'Maryland', 'South Carolina']

To reference Delaware I Would use "states[0]" and South Carolina I would use "states[-1]"

To add elements to list: states.append("New Element")

To add another list (concat) use:
	states.extend(["first element", "second element", "third element", "fourth element", "fifth element -  aha!"])

To insert:
	list.insert(i, x) where x=value to insert, i=position where value will be inserted
	
To remove:
	list.remove(x) removes the element where its value is equal to x. It creates a ValueError message if there is no such element.

To fetch and extract:
	list.pop([i])  It retrieves and removes the element at position i. If no value for i is provided it will retrieve and remove the last elemen on the list.
	
To delete the list elements:
	list.clear()

To select from one of the elements in a list:
	random.choice(list) 

To reorder a list:
	random.shuffle(list)

You can nest lists within lists. Just use the same [] definition of the inner elements.


CODE BLOCKS, FUNCTIONS, WHILE LOOPS:
Cerating a function is:
	def funcName(xArg):
		#function code block here

For loops are used with a range() built-in function.
	for i in range(s, e):  --> This will iterate over a series of steps that go from s to e, excluding e.
								range can also be range(x) --> it includes 
While loops:
	Works like any while loop in any other language:
		while "condition":
		
		i.e. while salary > 0:
				buy_stuff()
